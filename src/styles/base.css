:root {
  /* --neutral-color:#FAFAFA; */
  --neutral-color:#F1F1F1;
  --text-color-light:rgba(0, 0, 0, 0.664);
  --text-color:#000;
  --bg-color:#fff;
  --footer-bg-color:#000;
  --footer-text-color:#fff;
  --primary-color:#03BFFD;
}

body {
  padding: 0px;
  margin: 0px;
  border: none;
  width: 100vw;
  overflow-x: hidden;
  background-color: var(--bg-color);
  color: var(--text-color);
}
body::-webkit-scrollbar {
  width: 10px;
}
body::-webkit-scrollbar-track {
  background-color: var(--neutral-color);
}
body::-webkit-scrollbar-thumb {
  background-color: var(--primary-color);
  border-radius: 10px;
}

* {
  box-sizing: border-box;
  transition: all 0.2s linear;
  scroll-behavior: smooth;
}
*::before, *::after {
  box-sizing: border-box;
  transition: all 0.3s ease-out;
}

.hoverable {
  position: relative;
  transform-origin: center center;
  overflow: hidden;
}
.hoverable:hover {
  cursor: pointer;
  color: var(--bg-color) !important;
}
.hoverable:not(:hover)::before {
  transform: scaleX(0);
}
.hoverable::before {
  content: "";
  height: 100%;
  z-index: -1;
  width: 100%;
  position: absolute;
  top: 0px;
  left: 0px;
  color: var(--bg-color);
  background-color: var(--text-color) !important;
  transform-origin: center center;
}

img {
  min-width: 50px;
  min-height: 50px;
}

.place-holder-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  align-items: center;
  gap: 1rem;
}
.place-holder-loading div {
  min-width: 50px;
  min-height: 50px;
  border-radius: 50%;
  border: 2px solid var(--primary-color);
  animation: load 1s cubic-bezier(0, 0.26, 0.55, 1.97) 0s infinite;
}
@keyframes load {
  from {
    transform: rotate(0deg) scale(1);
  }
  to {
    transform: rotate(360deg) scale(0.6);
    border-radius: 0px;
  }
}

.place-holder-loading-fixed {
  margin: auto;
  display: flex;
  align-items: center;
  gap: 1rem;
}
.place-holder-loading-fixed div {
  min-width: 50px;
  min-height: 50px;
  border-radius: 50%;
  border: 2px solid var(--primary-color);
  animation: load 1s cubic-bezier(0, 0.26, 0.55, 1.97) 0s infinite;
}
@keyframes load {
  from {
    transform: rotate(0deg) scale(1);
  }
  to {
    transform: rotate(360deg) scale(0.6);
    border-radius: 0px;
  }
}

input {
  background-color: inherit;
  color: inherit;
}/*# sourceMappingURL=base.css.map */